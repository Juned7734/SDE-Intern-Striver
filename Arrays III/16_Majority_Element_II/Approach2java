// Time Complexity : O(N)
// Space Complexity : O(N)
class Solution {

  public List<Integer> majorityElement(int[] nums) {
    List<Integer> li = new ArrayList<Integer>();

    HashMap<Integer, Integer> hm = new HashMap<Integer, Integer>();

    for (int i = 0; i < nums.length; i++) {
      if (hm.containsKey(nums[i])) {
        hm.put(nums[i], hm.get(nums[i]) + 1);
      } else {
        hm.put(nums[i], 1);
      }

      if (
        hm.get(nums[i]) > nums.length / 3 && li.contains(nums[i]) == false
      ) li.add(nums[i]);
    }

    return li;
  }
}
